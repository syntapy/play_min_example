AWSTemplateFormatVersion: '2010-09-09'
Description: 'The security groups get their own stack so they can refer to each other.'
Parameters:
  VPCId:
    Description: The vpc to add the security groups to.
    Type: AWS::EC2::VPC::Id
  Environment:
    Type: String
    AllowedValues: ["staging", "prod"]
    Description: "Staging or prod environment"
Resources:
  containersecgroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from load balancer
      GroupName: !Join [".", [!Ref Environment, "civiform-container.sg"]]
      VpcId: !Ref 'VPCId'
      SecurityGroupIngress:
        - IpProtocol: -1
          SourceSecurityGroupId: !Ref 'publiclbsecgroup'
  dbsecgroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress for DB
      GroupName: !Join [".", [!Ref Environment, "civiform-db.sg"]]
      VpcId: !Ref 'VPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          SourceSecurityGroupId: !Ref 'containersecgroup'
  publiclbsecgroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic to load balancer
      GroupName: !Join [".", [!Ref Environment, "civiform-publiclb.sg"]]
      VpcId: !Ref 'VPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
Outputs:
  LbGroup:
    Description: The security group for load balancer access
    Value: !Ref 'publiclbsecgroup'
    Export:
      Name: !Sub '${AWS::StackName}-LB'
  DatabaseGroup:
    Description: The security group for database access
    Value: !Ref 'dbsecgroup'
    Export:
      Name: !Sub '${AWS::StackName}-DB'
  ContainerGroup:
    Description: The security group for the container itself
    Value: !Ref 'containersecgroup'
    Export:
      Name: !Sub '${AWS::StackName}-Container'
