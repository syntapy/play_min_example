AWSTemplateFormatVersion: '2010-09-09'
Description: 'The main stack for CiviForm.'
Mappings:
  Container:
    prod:
      Domain: civiform.seattle.gov
      MeasurementId: G-HXM0Y35TGE
    staging:
      Domain: staging.seattle.civiform.com
      MeasurementId: G-HXM0Y35TGE
  DNS:
    prod:
      # The city's DNS is configured as a CNAME to this address.
      Domain: seattle.civiform.com
      HostedZone: Z02860647AHUYUQTEAPO
    staging:
      Domain: staging.seattle.civiform.com
      HostedZone: Z02860647AHUYUQTEAPO
  S3TaskRoles:
    prod:
      role: arn:aws:iam::405662711265:role/AmazonECSTaskS3BucketRole
    staging:
      role: arn:aws:iam::405662711265:role/AmazonECSTaskS3BucketRoleStaging
Parameters:
  Timestamp:
    Description: Current timestamp in seconds.
    Type: Number
  DBUsername:
    Description: The name of the database user.
    Type: String
    Default: civiform
  Environment:
    Description: prod/staging
    AllowedValues: ["staging", "prod"]
    Type: String
    Default: staging
Conditions:
  CreateProdResources: !Equals [!Ref Environment, "prod"]
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/network.yaml'
      Parameters:
        Environment: !Ref Environment
  Filestore:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/filestorage.yaml'
      Parameters:
        S3VPCEndpoint: !GetAtt 'VPC.Outputs.S3Endpoint'
        Environment: !Ref Environment
        S3TaskRole: !FindInMap [S3TaskRoles, !Ref Environment, role]
  Secrets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/secrets.yaml'
      Parameters:
        Environment: !Ref Environment
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/security_groups.yaml'
      Parameters:
        VPCId: !GetAtt 'VPC.Outputs.VPCId'
        Environment: !Ref Environment
  LB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/load_balancer.yaml'
      Parameters:
        VPCId: !GetAtt 'VPC.Outputs.VPCId'
        PublicSubnet1: !GetAtt 'VPC.Outputs.PublicSubnet1'
        PublicSubnet2: !GetAtt 'VPC.Outputs.PublicSubnet2'
        LBSecurityGroup: !GetAtt 'SecurityGroups.Outputs.LbGroup'
        DomainName: !FindInMap [DNS, !Ref Environment, Domain]
        HostedZoneId: !FindInMap [DNS, !Ref Environment, HostedZone]
        Environment: !Ref Environment
  DB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/database.yaml'
      Parameters:
        DBUsername: !Ref DBUsername
        DBPassword: !GetAtt 'Secrets.Outputs.Password'
        DBSecurityGroup: !GetAtt 'SecurityGroups.Outputs.DatabaseGroup'
        PrivateSubnet1: !GetAtt 'VPC.Outputs.PrivateSubnet1'
        PrivateSubnet2: !GetAtt 'VPC.Outputs.PrivateSubnet2'
        Environment: !Ref Environment
  Container:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/containers.yaml'
      Parameters:
        DBUsername: !Ref DBUsername
        DBPassword: !GetAtt 'Secrets.Outputs.Password'
        DBAddress: !GetAtt 'DB.Outputs.DBAddress'
        DBPort: !GetAtt 'DB.Outputs.DBPort'
        SecretKey: !GetAtt 'Secrets.Outputs.Key'
        PrivateSubnet1: !GetAtt 'VPC.Outputs.PrivateSubnet1'
        PrivateSubnet2: !GetAtt 'VPC.Outputs.PrivateSubnet2'
        LBTargetName: !GetAtt 'LB.Outputs.LBTarget'
        ContainerSecurityGroup: !GetAtt 'SecurityGroups.Outputs.ContainerGroup'
        S3BucketName: !GetAtt 'Filestore.Outputs.bucketname'
        DomainName: !FindInMap [Container, !Ref Environment, Domain]
        MeasurementId: !FindInMap [Container, !Ref Environment, MeasurementId]
        Environment: !Ref Environment
        S3TaskRole: !FindInMap [S3TaskRoles, !Ref Environment, role]
  Monitoring:
    Type: AWS::CloudFormation::Stack
    Condition: CreateProdResources
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/monitoring.yaml'
      Parameters:
        DBName: !GetAtt 'DB.Outputs.DBName'
        LBName: !GetAtt 'LB.Outputs.LBFullName'
        LBTGName: !GetAtt 'LB.Outputs.TGFullName'
Outputs:
  ECSService:
    Description: The ARN of the service.
    Value: !GetAtt 'Container.Outputs.ECSService'
  ECSCluster:
    Description: The ARN of the cluster.
    Value: !GetAtt 'Container.Outputs.ECSCluster'
