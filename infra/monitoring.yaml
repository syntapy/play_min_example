AWSTemplateFormatVersion: '2010-09-09'
Description: 'Monitoring for CiviForm - see comments in monitoring.yaml for description of which alerts we have.'
Parameters:
  DBName:
    Type: String
    Description: The database to alert on.
  LBName:
    Type: String
    Description: The ELB to alert on.
  LBTGName:
    Type: String
    Description: The ELB TargetGroup to alert on.

Resources:
  # Alerts that do not require paging - shouldn't interrupt someone or wake them up.
  ticketalerts:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CiviFormTicketAlerts
      DisplayName: CiviFormTicketAlerts
  # Alerts that require immediate action and may indicate that the site is down.
  # We want to get someone out of bed for this.
  pagingalerts:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CiviFormPagingAlerts
      DisplayName: CiviFormPagingAlerts

  # Send a page if more than 5% of requests are 500-range errors.
  # This probably means that the website is seriously broken for a large percentage
  # of users.
  5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Too many 5xx on the live site detected.
      AlarmName: 5xxErrorsTooHigh
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: ignore
      EvaluationPeriods: 5
      # Is this too sensitive?  we'll have to see.
      Threshold: 0.05
      AlarmActions:
        - !Ref pagingalerts
      Metrics:
        - Id: ratio
          Expression: (total5xx / (total2xx + total3xx + total5xx))
          ReturnData: true
        - Id: total2xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_2XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: total3xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_3XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: total5xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_5XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false

  # Send a ticket if more than 1% of requests are 400-range errors.
  # This probably means there's a broken link somewhere on the site,
  # either inbound or internal.
  4xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Too many 4xx on the live site - broken link?
      AlarmName: 4xxErrorsTooHigh
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: ignore
      EvaluationPeriods: 20
      Threshold: 0.01
      AlarmActions:
        - !Ref ticketalerts
      Metrics:
        - Id: ratio
          Expression: (total4xx / (total2xx + total3xx + total4xx))
          ReturnData: true
        - Id: total2xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_2XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: total3xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_3XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: total4xx
          MetricStat:
            Metric:
              MetricName: HTTPCode_Target_4XX_Count
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Sum
          ReturnData: false

  # Send a page if there are no healthy containers - this probably means something is
  # very broken and it might be impossible to reach the app.
  NoHealthyContainersAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: No healthy servers - site down.
      AlarmName: SiteIsDownAlarm
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      TreatMissingData: breaching
      Threshold: 0
      AlarmActions:
        - !Ref pagingalerts
      Metrics:
        - Id: healthyhosts
          MetricStat:
            Metric:
              MetricName: HealthyHostCount
              Namespace: AWS/ApplicationELB
              Dimensions:
                - Name: TargetGroup
                  Value: !Ref LBTGName
                - Name: LoadBalancer
                  Value: !Ref LBName
            Period: 60
            Stat: Maximum
          ReturnData: true


  # Send a page if the database registers zero connections - this probably means
  # that networking is down.
  NoDBConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: No database connections - site likely nonfunctional.
      AlarmName: DBConnectionsDownAlarm
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 0
      AlarmActions:
        - !Ref pagingalerts
      Metrics:
        - Id: dbconns
          MetricStat:
            Metric:
              MetricName: DatabaseConnections
              Namespace: AWS/RDS
              Dimensions:
                - Name: DBInstanceIdentifier
                  Value: !Ref DBName
            Period: 60
            Stat: Maximum
          ReturnData: true

  # Send a ticket if the database has very high CPU utilization
  DBCPUTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Database CPU is overtaxed - site may be slow.
      AlarmName: DBRunningHot
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 3
      Threshold: 85
      AlarmActions:
        - !Ref ticketalerts
      Metrics:
        - Id: dbcpu
          MetricStat:
            Metric:
              MetricName: CPUUtilization
              Namespace: AWS/RDS
              Dimensions:
                - Name: DBInstanceIdentifier
                  Value: !Ref DBName
            Period: 60
            Stat: Average
          ReturnData: true

  # Send a ticket if the database has less than 5GB free space
  DBSpaceLowAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Database running low on storage space - site may go down soon if usage is high.
      AlarmName: DBStorageSpaceLow
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 5
      Threshold: 5120
      AlarmActions:
        - !Ref ticketalerts
      Metrics:
        - Id: dbspace
          MetricStat:
            Metric:
              MetricName: FreeStorageSpace
              Namespace: AWS/RDS
              Dimensions:
                - Name: DBInstanceIdentifier
                  Value: !Ref DBName
            Period: 60
            Stat: Maximum
          ReturnData: true
