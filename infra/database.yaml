AWSTemplateFormatVersion: '2010-09-09'
Description: 'The database - including the networking required to get it to interface with the private network.'
Mappings:
  DbSize:
    prod:
      Size: db.m5.large
    staging:
      Size: db.t3.small
Parameters:
  DBPassword:
    NoEcho: 'true'
    Description: Password for database access
    Type: String
  Environment:
    Type: String
    AllowedValues: ["staging", "prod"]
    Description: "Staging or prod environment"
  DBUsername:
    NoEcho: 'true'
    Description: Username for database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  PrivateSubnet1:
    Description: The private subnets to add the database to.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: The private subnet to add the database to.
    Type: AWS::EC2::Subnet::Id
  DBSecurityGroup:
    Description: The security group to use for our database access control.
    Type: String
Resources:
  subnetgroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: two subnets for the database
      DBSubnetGroupName: !Join ["-", [!Ref Environment, "civiform-dbsubnetgroup"]]
      SubnetIds:
        - !Ref 'PrivateSubnet1'
        - !Ref 'PrivateSubnet2'
  postgresdb:
    Type: AWS::RDS::DBInstance
    # If you accidentally delete the database, we store a snapshot of the database.
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Join ["-", [!Ref Environment, "civiform-postgres-db"]]
      DBName: postgres
      DBInstanceClass: !FindInMap [DbSize, !Ref Environment, Size]
      AllocatedStorage: 50
      Engine: postgres
      EngineVersion: '12.5'
      MasterUsername: !Ref 'DBUsername'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBPassword}}}'
      DBSubnetGroupName: !Ref 'subnetgroup'
      VPCSecurityGroups:
        - !Ref 'DBSecurityGroup'
Outputs:
  DBPort:
    Description: The port on which the DB can be reached.
    Value: !GetAtt 'postgresdb.Endpoint.Port'
    Export:
      Name: !Sub '${AWS::StackName}-DBPort'
  DBAddress:
    Description: The address at which the DB can be reached.
    Value: !GetAtt 'postgresdb.Endpoint.Address'
    Export:
      Name: !Sub '${AWS::StackName}-DBAddress'
  DBName:
    Description: The name of the database
    Value: !Ref postgresdb
    Export:
      Name: !Sub '${AWS::StackName}-DBName'
