AWSTemplateFormatVersion: '2010-09-09'
Description: 'The "virtual private cloud" (VPC) for Civiform.  One region, to save costs, but two Availability Zones (AZs) for reliability.  We will go down if the whole region goes down, but not if only one building goes down.  Built with parallel stacks - two public and two private subnets, one per AZ.'
Mappings:
  IpMap:
    prod:
      vpcBlock: 10.192.0.0/16
      pub1Block: 10.192.10.0/24
      pub2Block: 10.192.11.0/24
      priv1Block: 10.192.20.0/24
      priv2Block: 10.192.21.0/24
    staging:
      vpcBlock: 10.193.0.0/16
      pub1Block: 10.193.10.0/24
      pub2Block: 10.193.11.0/24
      priv1Block: 10.193.20.0/24
      priv2Block: 10.193.21.0/24
Parameters:
  Environment:
    Type: String
    AllowedValues: ["staging", "prod"]
    Description: "Staging or prod environment"
Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [IpMap, !Ref Environment, vpcBlock]
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "civiform.vpc"]]
  ig:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "civiform.internetgateway"]]
  pubsubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !FindInMap [IpMap, !Ref Environment, pub1Block]
      VpcId: !Ref 'vpc'
      AvailabilityZone: !Sub '${AWS::Region}a'
      MapPublicIpOnLaunch: true

      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-az1.subnet"]]
  pubsubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !FindInMap [IpMap, !Ref Environment, pub2Block]
      VpcId: !Ref 'vpc'
      AvailabilityZone: !Sub '${AWS::Region}b'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-az2.subnet"]]
  privsubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !FindInMap [IpMap, !Ref Environment, priv1Block]
      VpcId: !Ref 'vpc'
      AvailabilityZone: !Sub '${AWS::Region}a'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "private-az1.subnet"]]
  privsubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !FindInMap [IpMap, !Ref Environment, priv2Block]
      VpcId: !Ref 'vpc'
      AvailabilityZone: !Sub '${AWS::Region}b'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "private-az2.subnet"]]
  attachgateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'vpc'
      InternetGatewayId: !Ref 'ig'
  natgateway1ip:
    Type: AWS::EC2::EIP
    DependsOn:
      - attachgateway
    Properties:
      Domain: !Ref 'vpc'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-gateway-1.eip"]]
  natgateway2ip:
    Type: AWS::EC2::EIP
    DependsOn:
      - attachgateway
    Properties:
      Domain: !Ref 'vpc'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-gateway-2.eip"]]
  natgateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'natgateway1ip.AllocationId'
      SubnetId: !Ref 'pubsubnet1'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-az1.natgateway"]]
  natgateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'natgateway2ip.AllocationId'
      SubnetId: !Ref 'pubsubnet2'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public-az2.natgateway"]]
  routetable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'vpc'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "public.routetable"]]
  internetroute:
    Type: AWS::EC2::Route
    DependsOn:
      - attachgateway
    Properties:
      GatewayId: !Ref 'ig'
      RouteTableId: !Ref 'routetable'
      DestinationCidrBlock: '0.0.0.0/0'
  pubsubnet1igassn:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'pubsubnet1'
      RouteTableId: !Ref 'routetable'
  pubsubnet2igassn:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'pubsubnet2'
      RouteTableId: !Ref 'routetable'
  privroutetable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'vpc'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "private-az1.routetable"]]
  privroutetable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'vpc'
      Tags:
        - Key: Name
          Value: !Join [".", [!Ref Environment, "private-az2.routetable"]]
  natroute1:
    Type: AWS::EC2::Route
    DependsOn:
      - attachgateway
    Properties:
      RouteTableId: !Ref 'privroutetable1'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref 'natgateway1'
  natroute2:
    Type: AWS::EC2::Route
    DependsOn:
      - attachgateway
    Properties:
      RouteTableId: !Ref 'privroutetable2'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref 'natgateway2'
  privsubnet1rtassn:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'privsubnet1'
      RouteTableId: !Ref 'privroutetable1'
  privsubnet2rtassn:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'privsubnet2'
      RouteTableId: !Ref 'privroutetable2'
  s3endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: '*'
            Resource: '*'
      RouteTableIds:
        - !Ref 'privroutetable1'
        - !Ref 'privroutetable2'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref 'vpc'
Outputs:
  VPCId:
    Description: The VPC Id
    Value: !Ref 'vpc'
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  PublicSubnet1:
    Description: The first public subnet of the vpc
    Value: !Ref 'pubsubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1'
  PublicSubnet2:
    Description: The second public subnet of the vpc
    Value: !Ref 'pubsubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2'
  PrivateSubnet1:
    Description: The first private subnet of the vpc
    Value: !Ref 'privsubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1'
  PrivateSubnet2:
    Description: The second private subnet of the vpc
    Value: !Ref 'privsubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2'
  S3Endpoint:
    Description: The endpoint for accessing S3 from VPC
    Value: !Ref 's3endpoint'
    Export:
      Name: !Sub '${AWS::StackName}-S3Endpoint'
